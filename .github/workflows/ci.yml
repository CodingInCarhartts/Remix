name: Remix CI/CD

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ main, master ]
    paths-ignore:
      - '**.md'

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Set CARGO_HTTP_MULTIPLEXING
        run: |
          if rustc +stable --version --verbose | grep -q '^release: 1\.7[01]\.'; then
            echo CARGO_HTTP_MULTIPLEXING=false >> $GITHUB_ENV
          fi
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test --all-features

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Check formatting
        run: cargo fmt

  windows-build:
    name: Build (Windows)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --release --target x86_64-pc-windows-msvc
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: remix-x86_64-pc-windows-msvc
          path: target/x86_64-pc-windows-msvc/release/remix.exe

  linux-build:
    name: Build (Linux)
    needs: windows-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu
      - name: Install OpenSSL
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --release --target x86_64-unknown-linux-gnu
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: remix-x86_64-unknown-linux-gnu
          path: target/x86_64-unknown-linux-gnu/release/remix

  release:
    name: Release
    needs: [test, clippy, format, linux-build]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            remix-x86_64-unknown-linux-gnu/remix
            remix-x86_64-pc-windows-msvc/remix.exe
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}